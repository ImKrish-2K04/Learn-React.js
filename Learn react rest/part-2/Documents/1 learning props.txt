--------------------------------------------------------------------------------
SEE:

Understanding Props in React.js

In React, components are reusable, meaning we create them once and use them multiple times. However, by default, a component contains static data, so when it is rendered multiple times, it appears the same.

To make components dynamic and customizable, we use props (short for properties).

--------------------------------------------------------------------------------

1Ô∏è‚É£ What are Props?
- Props are properties (key-value pairs) that are passed to a component.
- They allow us to pass data from a parent component to a child component.
- Using props, each instance of a component can have different content while using the same component structure.
- Props cannot be modified inside the component; they are read-only.

--------------------------------------------------------------------------------

2Ô∏è‚É£ Example: Using Props in a Component

‚úÖ Creating a Component that Accepts Props

We define a component and use destructuring to extract the `title` and `details` props.

```
function Template({ title, details = "dummy text" }) { // Using destructuring
    return (
        <>
            <h1>{title}</h1>
            <p>{details}</p>
        </>
    );
}
```

‚úÖ Using Props in the Parent Component

Props are passed to the component as key-value pairs.

```
function App() {
    return (
        <>
            {/* Passing different props to each instance of the Template component */}
            <Template title="Title 1" details="Detail 1" />
            <Template title="Title 2" /> {/* Uses default value for details */}
        </>
    );
}
```

--------------------------------------------------------------------------------

3Ô∏è‚É£ Explanation of the Example:

‚úî `<Template title="Title 1" details="Detail 1" />` ‚Üí Passes custom title & details.  
‚úî `<Template title="Title 2" />` ‚Üí Only `title` is passed; `details` takes the default value (`"dummy text"`).  
‚úî Using destructuring (`{ title, details }`) ‚Üí Makes prop handling cleaner and more readable.  
‚úî One more imp thing, for passing an integer/numeric value we have to enclose it inside a curly braces like: `price={40499}`

--------------------------------------------------------------------------------

4Ô∏è‚É£ Key Takeaways About Props:

‚úî Props allow data to be passed from parent to child components.  
‚úî Props are immutable (cannot be changed inside the child component).  
‚úî We can define default values for props using destructuring.  
‚úî They help in creating reusable and dynamic components.  

By understanding props, we can make our React applications more modular and scalable! üöÄ