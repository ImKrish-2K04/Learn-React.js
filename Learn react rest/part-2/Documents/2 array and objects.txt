--------------------------------------------------------------------------------
SEE:

Passing Arrays and Objects as Props in React.js:
- In React, props are not limited to simple values like strings or numbers. We can also pass arrays and objects as props to make components more dynamic.

--------------------------------------------------------------------------------

1Ô∏è‚É£ Passing an Array as a Prop
- Arrays can be passed as props and accessed inside the child component. However, - when rendering an array directly, React will display all values without spaces or separators.

‚úÖ Example: Passing an Array as a Prop
```
const features = ["hi-tech", "durable"];
<Title feature={features} />
```

‚ùå Problem: Directly Displaying an Array
- If we try to render the array directly, React will join all values without spaces.
```
function Title({ feature }) {
  return <p>{feature}</p>; // ‚ùå Output: "hi-techdurable"
}
```

‚úÖ Solution 1: Using `.join()` Method
- We can use `.join("separator")` to format the array values properly.
```
function Title({ feature }) {
  return <p>{feature.join(", ")}</p>; // ‚úÖ Output: "hi-tech, durable"
}
```

‚úÖ Solution 2: Using `.map()` to Render List Items
- If we want each value to appear as a list item (`<li>`), we use `.map()`:
```
function Title({ feature }) {
  return (
    <ul>
      {feature.map((item, index) => (
        <li key={index}>{item}</li>
      ))}
    </ul>
  );
}
```

--------------------------------------------------------------------------------

2Ô∏è‚É£ Passing an Object as a Prop
- Objects can also be passed as props, but they cannot be displayed directly in .

‚úÖ Example: Passing an Object as a Prop
```
const product = { name: "Laptop", price: "$1000" };
<Product details={product} />
```

 ‚ùå Problem: Directly Rendering an Object
```
function Product({ details }) {
  return <p>{details}</p>; // ‚ùå ERROR: Objects are not valid as a React child
}
```

‚úÖ Solution: Accessing Object Properties
- Use the dot notation (`details.property`) to access individual properties.
```
function Product({ details }) {
  return (
    <div>
      <h2>{details.name}</h2>
      <p>Price: {details.price}</p>
    </div>
  );
}
```

--------------------------------------------------------------------------------

3Ô∏è‚É£ Passing Arrays and Objects Inline (Without Creating Variables)
- We can directly pass arrays and objects without defining them separately.

‚úÖ Inline Array Passing
```
<Title feature={["hi-tech", "durable"]} />
```

‚úÖ Inline Object Passing
```
<Product details={{ name: "Laptop", price: "$1000" }} />
```

--------------------------------------------------------------------------------

4Ô∏è‚É£ Key Takeaways
‚úî Arrays can be passed as props and displayed using `.join()` or `.map()`.  
‚úî Objects must be accessed using dot notation (`object.property`).  
‚úî We can pass arrays and objects inline without defining them separately.  
‚úî React does not allow rendering an object directly in .  

By understanding these techniques, we can make our React components more dynamic and reusable! üöÄ